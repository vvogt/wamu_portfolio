/* ------------------------------------------
   tools.MIXINS
------------------------------------------ */

@mixin clearfix() {
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin un-clearfix() {
  &:before, &:after {
    content: none;
    display: auto;
  }
  &:after {
    clear: none;
  }
}

// Image Replacement

@mixin ir() {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  // background: url(test.png);
  // width: 300px;
  // height: 75px;
}

// Hide only visually, but have it available for screen readers:
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

@mixin visuallyhidden() {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}


//  ## Media query and orietation mixins
//  ==================================================
//  http://alwaystwisted.com/post.php?s=2013-04-01-my-media-query-mixin


@mixin mq($point, $query1: min, $query2: width) {
  @media screen and (#{$query1}-#{$query2}: strip-unit($point) / 16 +em) {
    @content;
  }
}

@mixin orient($orientation: landscape) {
  @media (orientation : $orientation) {
    @content;
  }
}

@mixin setLRPadding($padding-lr1: 5%, $padding-lr2: 2.6%, $padding-lr3: 6%, $padding-lr4: 14%) {
  
  padding-left: $padding-lr1;
  padding-right: $padding-lr1;

   @include mq(600) {
      padding-left: $padding-lr2;
      padding-right: $padding-lr2;
   }

   @include mq(1150) {
      padding-left: $padding-lr3;
      padding-right: $padding-lr3;
   }

   @include mq(1400) {
     padding-left: $padding-lr4;
     padding-right: $padding-lr4;
   }

}

@mixin setLRPadding-preview($padding-lr1: 5%, $padding-lr2: 2.6%, $padding-lr3: 6%, $padding-lr4: 14%) {
  padding-left: calc(#{$padding-lr1} - 10px);
  padding-right: calc(#{$padding-lr1} - 10px);

   @include mq(600) {
      padding-left: calc(#{$padding-lr2} - 10px);
      padding-right: calc(#{$padding-lr2} - 10px);
   }

   @include mq(1150) {
      padding-left: calc(#{$padding-lr3} - 10px);
      padding-right: calc(#{$padding-lr3} - 10px);
   }

    @include mq(1400) {
      padding-left: calc(#{$padding-lr4} - 10px);
      padding-right: calc(#{$padding-lr4} - 10px);
    }
}

@mixin buttonWithArrow($bgColor, $color) {
  button {
    background-color: $bgColor;
    color: $color;
    border-style: none;
    border-radius: 5px;
    padding: 16px 20px 14px;
    font-size: 15px;
    font-weight: 800;
    flex: none;
    flex-grow: 0;

    &:before {
      display: inline-block;
      content: " ";
      background-image: url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 83.2 80.9"><path fill="%23#{str-slice("#{$color}", 2, 7)}" d="M42.8.4L31.9 11.2l23.7 22.2H0V48h55.6l-24 21.6 11.2 11.3 40.4-40.7z"></path></svg>');
      background-size: 1.7ex 1.7ex;
      width: 1.7ex;
      height: 1.7ex;
      margin-right: 13px;
      background-repeat: no-repeat;
      background-position: center center;
    }
  }
}


